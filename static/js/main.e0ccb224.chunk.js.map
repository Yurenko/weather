{"version":3,"sources":["components/HistorySearch/ItemHistory.js","components/HistorySearch/HistorySearch.js","components/Loader/Loader.js","components/Search/Search.js","APIKEY.js","redux/weather/weatherActions.js","redux/weather/weatherOptions.js","App.js","redux/weather/weatherReduser.js","redux/store.js","index.js"],"names":["ItemHistory","item","handleClickCity","handleClickCords","icon","weather","temp","info","Math","round","className","src","alt","onClick","name","sys","country","description","classnames","hot","main","norm","cold","temp_min","temp_max","wind","speed","clouds","all","pressure","coord","lat","lon","HistorySearch","items","console","log","map","index","id","reverse","Loader","Search","getWeather","citySearch","handleSearch","onSubmit","type","placeholder","value","onChange","APIKEY","ActionsType","featchWeatherSuccess","data","payload","featchWeatherError","error","loadingWeather","isLoading","locationFeatchWeathers","lng","dispatch","a","fetch","then","res","json","cod","message","Error","catch","finally","featchWeathers","city","App","useState","setCitySearch","useSelector","state","weatherReduser","useDispatch","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","e","preventDefault","target","elements","initialState","rootReducer","combineReducers","middleware","ReduxThunk","enhanter","applyMiddleware","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0ccb224.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./ItemHistory.css\";\r\nimport classnames from \"classnames\";\r\n\r\nconst ItemHistory = ({ item, handleClickCity, handleClickCords }) => {\r\n  const icon = `http://openweathermap.org/img/wn/${item.weather[0].icon}.png`;\r\n  const temp = (info) => Math.round((info - 273.15) * 100) / 100;\r\n\r\n  return (\r\n    <div className=\"border-top d-flex flex-wrap\">\r\n      <div className=\"p-2\">\r\n        <img src={icon} alt=\"icon\" />\r\n      </div>\r\n      <div className=\"p-3\">\r\n        <h4>\r\n          <button\r\n            className=\"text-decoration-none text-underline-hover city\"\r\n            onClick={() => handleClickCity(item.name)}\r\n          >\r\n            {item.name}, {item.sys.country}\r\n          </button>\r\n          <span> {item.weather[0].description}</span>\r\n        </h4>\r\n        <span\r\n          className={classnames(\"rounded-pill temp\", {\r\n            hot: temp(item.main.temp) >= 8,\r\n            norm: temp(item.main.temp) < 30 && temp(item.main.temp) > -10,\r\n            cold: temp(item.main.temp) <= -10,\r\n          })}\r\n        >\r\n          {temp(item.main.temp)} &#176;ะก\r\n        </span>{\" \"}\r\n        temperature from {temp(item.main.temp_min)} to{\" \"}\r\n        {temp(item.main.temp_max)} &#176;ะก, wind {item.wind.speed} m/s. clouds{\" \"}\r\n        {item.clouds.all} %, {item.main.pressure} hpa\r\n        <div>\r\n          Geo coords{\" \"}\r\n          <button\r\n            className=\"text-decoration-none text-underline-hover cords\"\r\n            onClick={() => handleClickCords(item.coord.lat, item.coord.lon)}\r\n          >\r\n            [{item.coord.lat}, {item.coord.lon}]\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemHistory;\r\n","import React from \"react\";\r\nimport \"./HistorySearch.css\";\r\nimport ItemHistory from \"./ItemHistory\";\r\n\r\nconst HistorySearch = ({ items, handleClickCity, handleClickCords }) => {\r\n  console.log(\"h\", items);\r\n  return (\r\n    <div className=\"container-xl\">\r\n      {items &&\r\n        items\r\n          .map((item, index) => (\r\n            <ItemHistory\r\n              key={item.id + index}\r\n              item={item}\r\n              handleClickCity={handleClickCity}\r\n              handleClickCords={handleClickCords}\r\n            />\r\n          ))\r\n          .reverse()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistorySearch;\r\n","import React from \"react\";\n\nconst Loader = () => {\n  return <h1 className=\"container-xl\">Loading...</h1>;\n};\n\nexport default Loader;\n","import React from \"react\";\r\nimport \"./Search.css\";\r\n\r\nconst Search = ({ getWeather, citySearch, handleSearch }) => {\r\n  return (\r\n    <form onSubmit={getWeather}>\r\n      <div\r\n        className=\"d-flex justify-content-center align-items-center input-group pt-5 pb-5 mb-4\"\r\n        id=\"search\"\r\n      >\r\n        <div className=\"col-3 border-left-50\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control input\"\r\n            placeholder=\"Enter the city\"\r\n            name=\"city\"\r\n            value={citySearch}\r\n            onChange={handleSearch}\r\n          />\r\n        </div>\r\n        <button className=\"btn btn-primary btnSearch\" type=\"submit\">\r\n          Search\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","export const APIKEY = \"17009a21e213f47c6745fb2f43f22fe7\";\r\n","export const ActionsType = {\n  WEATHER_FEATCH_START: \"WEATHER_FEATCH_START\",\n  WEATHER_FEATCH_SUCCESS: \"WEATHER_FEATCH_SUCCESS\",\n  WEATHER_FEATCH_ERROR: \"WEATHER_FEATCH_ERROR\",\n  WEATHER_LOADING: \"WEATHER_LOADING\",\n  WEATHER_FEATCH_FOR_FIVE_DAYS: \"WEATHER_FEATCH_FOR_FIVE_DAYS\",\n};\n\nexport const featchWeatherStart = () => ({\n  type: ActionsType.WEATHER_FEATCH_START,\n});\n\nexport const featchWeatherSuccess = (data) => ({\n  type: ActionsType.WEATHER_FEATCH_SUCCESS,\n  payload: data,\n});\n\nexport const featchWeatherError = (error) => ({\n  type: ActionsType.WEATHER_FEATCH_ERROR,\n  payload: error,\n});\n\nexport const loadingWeather = (isLoading) => ({\n  type: ActionsType.WEATHER_LOADING,\n  payload: isLoading,\n});\n\nexport const featchWeatherForFiveDays = (data) => ({\n  type: ActionsType.WEATHER_FEATCH_FOR_FIVE_DAYS,\n  payload: data,\n});\n","import { APIKEY } from \"../../APIKEY\";\nimport {\n  featchWeatherError,\n  featchWeatherSuccess,\n  loadingWeather,\n} from \"./weatherActions\";\n\nexport const locationFeatchWeathers = (lat, lng) => async (dispatch) => {\n  dispatch(loadingWeather(true));\n  await fetch(\n    `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${APIKEY}`\n  )\n    .then((res) => res.json())\n    .then((data) => {\n      if (data.cod === 200) {\n        dispatch(featchWeatherSuccess(data));\n      } else {\n        dispatch(featchWeatherError(data.message));\n        throw new Error(data.message);\n      }\n    })\n    .catch((error) => {\n      console.log(\"Error location featch\", error);\n    })\n    .finally(() => {\n      dispatch(loadingWeather(false));\n    });\n};\n\nexport const featchWeathers = (city) => async (dispatch) => {\n  dispatch(loadingWeather(true));\n  await fetch(\n    `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=celsius&APPID=${APIKEY}`\n  )\n    .then((res) => res.json())\n    .then((data) => {\n      if (data.cod === 200) {\n        dispatch(featchWeatherSuccess(data));\n      } else {\n        dispatch(featchWeatherError(data.message));\n        throw new Error(data.message);\n      }\n    })\n    .catch((error) => {\n      console.log(\"Error search city\", error);\n    })\n    .finally(() => {\n      dispatch(loadingWeather(false));\n    });\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport HistorySearch from \"./components/HistorySearch/HistorySearch\";\nimport Loader from \"./components/Loader/Loader\";\nimport Search from \"./components/Search/Search\";\nimport \"./App.css\";\nimport {\n  featchWeathers,\n  locationFeatchWeathers,\n} from \"./redux/weather/weatherOptions\";\n\nfunction App() {\n  const [citySearch, setCitySearch] = useState(\"\");\n  const items = useSelector((state) => state.weatherReduser.data);\n  const isLoading = useSelector((state) => state.weatherReduser.isLoading);\n  const error = useSelector((state) => state.weatherReduser.error);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      function (position) {\n        let lat = position.coords.latitude;\n        let lng = position.coords.longitude;\n        dispatch(locationFeatchWeathers(lat, lng));\n      },\n      function (error) {\n        console.log(error.message);\n      }\n    );\n  }, [dispatch]);\n\n  const fetchData = (e) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    dispatch(featchWeathers(city)).then(() => {\n      setCitySearch(\"\");\n    });\n  };\n\n  const handleSearch = (e) => {\n    setCitySearch(e.target.value);\n  };\n\n  const handleClickCity = (city) => {\n    dispatch(featchWeathers(city));\n  };\n\n  const handleClickCords = (lat, lng) => {\n    dispatch(locationFeatchWeathers(lat, lng));\n  };\n\n  return (\n    <div>\n      <h1 className=\"container-xl border-bottom pb-2\">Weather in your city</h1>\n      <Search\n        getWeather={fetchData}\n        citySearch={citySearch}\n        handleSearch={handleSearch}\n      />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        !error && (\n          <HistorySearch\n            items={items}\n            handleClickCity={handleClickCity}\n            handleClickCords={handleClickCords}\n          />\n        )\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { ActionsType } from \"./weatherActions\";\n\nconst initialState = {\n  data: [],\n  isLoading: false,\n  error: \"\",\n};\n\nconst weatherReduser = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case ActionsType.WEATHER_FEATCH_START:\n      return undefined;\n    case ActionsType.WEATHER_FEATCH_SUCCESS:\n      return { ...state, data: [...state.data, payload], error: \"\" };\n    case ActionsType.WEATHER_FEATCH_ERROR:\n      return { ...state, data: {}, error: payload };\n    case ActionsType.WEATHER_LOADING:\n      return { ...state, isLoading: payload };\n    default:\n      return state;\n  }\n};\n\nexport default weatherReduser;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport ReduxThunk from \"redux-thunk\";\nimport weatherReduser from \"./weather/weatherReduser\";\n\nconst rootReducer = combineReducers({\n  weatherReduser,\n});\n\nconst middleware = [ReduxThunk];\n\nconst enhanter = applyMiddleware(...middleware);\n\nconst store = createStore(rootReducer, composeWithDevTools(enhanter));\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}